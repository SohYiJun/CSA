.model small
.stack 100
.data
    	music_community	  DB 10,13,"                                                                               "
		          DB 10,13,"                  M  U  S  I  C     C  O  M  M  U  N  I  T  Y                     "
			  DB 10,13,"                                                                               "
 			  DB 10,13,"                      ___________________________________"
			  DB 10,13,"                     |                                   |"
               		  DB 10,13,"                     |            M  E  N  U             |"
			  DB 10,13,"                     |___________________________________|"
			  DB 10,13,"                     |                                   |"
			  DB 10,13,"                     |   1. Event Details                |"
			  DB 10,13,"                     |   2. Purchase                     |"
			  DB 10,13,"                     |   3. Cart History                 |"
			  DB 10,13,"                     |   4. Exit                         |"
			  DB 10,13,"                     |___________________________________|"
			  DB 10,13,"                                                          "
			  DB 10,13,"                      Please select your option (1-4) > $"
    	invalidMsg db 10, 13, "	Invalid choice. Please try again.", 10, 13, "$"
	eventTitle 	  DB 10,13,"                      ___________________________________"
			  DB 10,13,"                     |                                   |"
               		  DB 10,13,"                     |      E v e n t  D e t a i l s     |"
			  DB 10,13,"                     |___________________________________|"
			  DB 10,13,"                                                          "
			  DB 10,13,"                        Welcome to our Music Community!   "
			  DB 10,13,"	    We're super excited to tell you about the TARUMT Music Festival "
			  DB 10,13,"     We're offering three types of tickets that match what you're looking for"
			  DB 10,13,"                                                                          "
			  DB 10,13,"                             1)Standard Ticket:"                                              
			  DB 10,13,"                             2)Couple Ticket: "
			  DB 10,13,"                             3)VIP Ticket: "
			  DB 10,13,"                                                                          "
			  DB 10,13,"   Join us at the TARUMT Music Festival, where tunes and moments mix together, "
			  DB 10,13," and we make memories that stick with us. Let our user-friendly system simplify" 
	                  DB 10,13,"          your journey towards an unforgettable musical experience.            "
			  DB 10,13,"                                                                          "
			  db 10,13,"                       Enter B back to menu: $"
			  DB 10,13,"     $"
    	choice db 0
    	purchase_str  	  DB 10,13,"                      ___________________________________"
			  DB 10,13,"                     |                                   |"
               		  DB 10,13,"                     |         P u r c h a s e           |"
			  DB 10,13,"                     |___________________________________|"
			  DB 10,13,"                     |                                   |"
			  DB 10,13,"                     |     1. Standard (S)               |"
			  DB 10,13,"                     |     2. VIP (V)                    |"
			  DB 10,13,"                     |     3. Couple (C)                 |"
			  DB 10,13,"                     |                                   |"
			  DB 10,13,"                     |   Back to Menu (B)                |"
			  DB 10,13,"                     |___________________________________|"
			  DB 10,13,"                                                          "
			  DB 10,13,"                      Choose your ticket (S,V,C) > $"
			  DB 10,13,"     $"
        	  
	eventContent 	db 10,13, "	Welcome to our Music Community! ",10,13,"We're super excited to tell you about the TARUMT Music Festival $"
	standard dw 30             ; Fixed price per item
	vip dw 40
	couple dw 50
    	quantity db ?           ; User input for quantity
    	total dw ?    
    	inputMsg 	db 10,13, "                     Enter quantity of ticket (1-9): $"
    	invalidQ 	db 10,13,"            Invalid quantity. Please enter a number between 1 and 9.$"
    	resultMsg1 	db 10,13,"                      Total price = $"

.code
main proc
    	mov ax,@data
    	mov ds,ax
    	
     

_start:
    	mov ah, 09h            ; Display the menu
    	lea dx, music_community
    	int 21h
    	
    	mov ah, 01h            ; Read a single character from the user
    	int 21h
    	sub al, '0'            ; Convert ASCII to numeric

    	cmp al, 1
    	je event_details
    	cmp al, 2
    	je purchase
    	cmp al, 4
    	je jmpexit

    ; Invalid choice
    	mov ah, 09h
    	lea dx, invalidMsg
    	int 21h
    	jmp _start

event_details:

    	mov ah,09h
    	lea dx,eventTitle
    	int 21h
    	mov ah, 01h            ; Read a single character from the user
    	int 21h
    	cmp al, 'B'
    	jmp _start

jumpback:
    	jmp _start

purchase:
    	mov ah,09h
    	lea dx,purchase_str
    	int 21h
    	
    	mov ah, 01h            ; Read a single character from the user
    	int 21h
    ; Convert the entered character to uppercase (if it's a letter)
    	cmp al, 'S'            ; Check for 'S' (Standard)
    	je order_standard
	cmp al, 'V'            ; Check for 'V' (VIP)
    	je order_vip
	cmp al, 's'            ; Check for 'S' (Standard)
    	je order_standard
	cmp al, 'v'            ; Check for 'V' (VIP)
    	je order_vip
	cmp al, 'C'            ; Check for 'C' (Couple)
    	je order_couple
	cmp al, 'c'            ; Check for 'C' (Couple)
    	je order_couple
    	cmp al, 'b'            ; Check for 'b' (Exit)
	je jumpback
	cmp al, 'B'            ; Check for 'B' (Exit)
    	je jumpback
	
    ; Invalid choice
    	mov ah, 09h
    	lea dx, invalidMsg
    	int 21h
    	je jumpback


jmpexit: 
	jmp exit_program

order_standard:
    	mov ah, 09h             ; Print input message
    	lea dx, inputMsg
    	int 21h

    	; Input quantity
    	mov ah, 01h
    	int 21h
    	sub al, '0'             ; Convert ASCII to numeric value
    	cmp al, 1               ; Check if quantity is at least 1
    	jl iv
    	cmp al, 9               ; Check if quantity is at most 9
    	jg iv
	
    	; Calculate total price
    	mov bl, al              ; Quantity in BL
    	mov ax, standard           ; Price in AX
    	mul bx                  ; AX = price * quantity
    	mov total, ax

	; Display results
    mov ah, 09h             ; Print result messages
    lea dx, resultMsg1
    int 21h

    mov ax, total           ; Display Total
    call printValue
    jmp _start

order_vip:
    	mov ah, 09h             ; Print input message
    	lea dx, inputMsg
    	int 21h

    	; Input quantity
    	mov ah, 01h
    	int 21h
    	sub al, '0'             ; Convert ASCII to numeric value
    	cmp al, 1               ; Check if quantity is at least 1
    	jl invalidQuantity
    	cmp al, 9               ; Check if quantity is at most 9
    	jg invalidQuantity
	
    	; Calculate total price
    	mov bl, al              ; Quantity in BL
    	mov ax, vip           ; Price in AX
    	mul bx                  ; AX = price * quantity
    	mov total, ax

	; Display results
    mov ah, 09h             ; Print result messages
    lea dx, resultMsg1
    int 21h

    mov ax, total           ; Display Total
    call printValue
    jmp _start

iv:
 jmp invalidQuantity


order_couple:
    	mov ah, 09h             ; Print input message
    	lea dx, inputMsg
    	int 21h

    	; Input quantity
    	mov ah, 01h
    	int 21h
    	sub al, '0'             ; Convert ASCII to numeric value
    	cmp al, 1               ; Check if quantity is at least 1
    	jl invalidQuantity
    	cmp al, 9               ; Check if quantity is at most 9
    	jg invalidQuantity
	
    	; Calculate total price
    	mov bl, al              ; Quantity in BL
    	mov ax, couple           ; Price in AX
    	mul bx                  ; AX = price * quantity
    	mov total, ax

	; Display results
   	 mov ah, 09h             ; Print result messages
    	 lea dx, resultMsg1
    	int 21h

    	mov ax, total           ; Display Total
    	call printValue
    	jmp _start

invalidQuantity:
    mov ah, 09h             ; Print invalid message
    lea dx, invalidQ
    int 21h 
    jmp _start 



printValue:
    push ax
    mov cx, 0
    mov bx, 10

    nextDigit:
        xor dx, dx          ; Clear DX for division
        div bx              ; Divide AX by 10, result in AX, remainder in DX
        push dx             ; Push the remainder onto the stack
        inc cx              ; Increment digit count
        test ax, ax         ; Check if quotient is zero
        jnz nextDigit

    printDigits:
        pop dx              ; Pop a digit from the stack
        add dl, '0'         ; Convert digit to ASCII
        mov ah, 02h         ; DOS function to print character
        int 21h
        loop printDigits

    pop ax
    ret  

exit_program:
    	mov ah, 4Ch        ; Set the function code for program termination
    	int 21h   

    	mov ah, 4Ch        
    	int 21h	

main endp
    	end main
